language: cpp
os: linux
dist: xenial

jobs:
  include:
    - os: linux
      addons:
        apt:
          packages: lcov
      compiler: clang
      env:
        - COVERAGE=ON
        - CONFIG=Debug

    - os: linux
      addons:
        apt:
          packages: lcov
      compiler: gcc
      env:
        - COVERAGE=ON
        - CONFIG=Debug

    - os: osx
      env:
        - COVERAGE=ON
        - CONFIG=Debug
      install:
        # Install dependencies for macOS
        - if [ "$TRAVIS_OS_NAME" = "osx" ] && [[ "$COVERAGE" == "ON" ]]; then HOMEBREW_NO_AUTO_UPDATE=1 brew install lcov ; fi

    - os: windows
      env:
        - COVERAGE=OFF
        - CONFIG=Release

script:
  # Create build folder
  - mkdir build && cd build
  # Configure
  - cmake -DCODE_COVERAGE=$COVERAGE -DCACHE_BUILD_TESTS=ON -DCACHE_BUILD_EXAMPLES=ON ..
  # Build & test
  - if [ "$TRAVIS_OS_NAME" = "osx"     ]; then cmake --build . --config $CONFIG -- -j4 ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux"   ]; then cmake --build . --config $CONFIG -- -j $(nproc) ; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then cmake --build . --config $CONFIG ; fi
  # Run unit tests
  - ctest -V -C $CONFIG

after_success:
  # Create lcov report
  # capture coverage info
  - lcov --directory . --capture --output-file coverage.info
  # filter out system and extra files.
  - lcov --remove coverage.info '/usr/*' '*/deps/*' --output-file coverage.info
  # output coverage data for debugging
  - lcov --list coverage.info
  # Uploading to CodeCov
  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

notifications:
  email:
    - marcizhu@gmail.com
